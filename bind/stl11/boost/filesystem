/* This is an automatically generated bindings file. Don't modify it! */
#if !defined(BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_BEGIN) || !defined(BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_END)
#error You need to define BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_BEGIN and BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_END to use this header file
#endif
#include <boost/filesystem.hpp>
BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_BEGIN
extern const char *boost_local_bind_in;
using boost::filesystem::symlink_option;
using boost::filesystem::copy_option;
using boost::filesystem::perms;
  using boost::filesystem::no_perms;
  using boost::filesystem::owner_read;
  using boost::filesystem::owner_write;
  using boost::filesystem::owner_exe;
  using boost::filesystem::owner_all;
  using boost::filesystem::group_read;
  using boost::filesystem::group_write;
  using boost::filesystem::group_exe;
  using boost::filesystem::group_all;
  using boost::filesystem::others_read;
  using boost::filesystem::others_write;
  using boost::filesystem::others_exe;
  using boost::filesystem::others_all;
  using boost::filesystem::all_all;
  using boost::filesystem::set_uid_on_exe;
  using boost::filesystem::set_gid_on_exe;
  using boost::filesystem::sticky_bit;
  using boost::filesystem::perms_mask;
  using boost::filesystem::perms_not_known;
  using boost::filesystem::add_perms;
  using boost::filesystem::remove_perms;
  using boost::filesystem::symlink_perms;
using boost::filesystem::file_type;
  using boost::filesystem::status_error;
  using boost::filesystem::status_unknown;
  using boost::filesystem::file_not_found;
  using boost::filesystem::regular_file;
  using boost::filesystem::directory_file;
  using boost::filesystem::symlink_file;
  using boost::filesystem::block_file;
  using boost::filesystem::character_file;
  using boost::filesystem::fifo_file;
  using boost::filesystem::socket_file;
  using boost::filesystem::reparse_file;
  using boost::filesystem::type_unknown;
  using boost::filesystem::_detail_directory_symlink;
using recursive_directory_iterator = boost::filesystem::recursive_directory_iterator;
using boost::filesystem::range_end;
using boost::filesystem::range_begin;
using boost::filesystem::end;
using boost::filesystem::change_extension;
using boost::filesystem::wrecursive_directory_iterator;
using boost::filesystem::begin;
using directory_iterator = boost::filesystem::directory_iterator;
using boost::filesystem::unique_path;
using boost::filesystem::temp_directory_path;
using boost::filesystem::system_complete;
using boost::filesystem::extension;
using boost::filesystem::space;
using boost::filesystem::rename;
using boost::filesystem::read_symlink;
using boost::filesystem::canonical;
using boost::filesystem::exists;
using boost::filesystem::is_regular_file;
using boost::filesystem::type_present;
using boost::filesystem::permissions;
using boost::filesystem::native;
using boost::filesystem::portable_file_name;
using boost::filesystem::portable_directory_name;
using boost::filesystem::current_path;
using boost::filesystem::create_directory;
using path = boost::filesystem::path;
using directory_entry = boost::filesystem::directory_entry;
using boost::filesystem::is_directory;
using boost::filesystem::symlink_status;
using boost::filesystem::remove;
using boost::filesystem::is_symlink;
using file_status = boost::filesystem::file_status;
using boost::filesystem::status_known;
using boost::filesystem::file_size;
using boost::filesystem::hard_link_count;
using boost::filesystem::portable_posix_name;
using filesystem_error = boost::filesystem::filesystem_error;
using boost::filesystem::lexicographical_compare;
using boost::filesystem::swap;
using boost::filesystem::equivalent;
using boost::filesystem::hash_value;
using boost::filesystem::windows_name;
using boost::filesystem::copy;
using boost::filesystem::portable_name;
using boost::filesystem::is_other;
using space_info = boost::filesystem::space_info;
using boost::filesystem::is_empty;
using boost::filesystem::basename;
using boost::filesystem::complete;
using boost::filesystem::status;
using boost::filesystem::resize_file;
using boost::filesystem::is_regular;
using boost::filesystem::create_directories;
using boost::filesystem::remove_all;
using boost::filesystem::initial_path;
using boost::filesystem::permissions_present;
using boost::filesystem::copy_file;
using boost::filesystem::codecvt_error_category;
using boost::filesystem::create_symlink;
using boost::filesystem::wpath;
using boost::filesystem::absolute;
using boost::filesystem::copy_symlink;
using boost::filesystem::create_directory_symlink;
using boost::filesystem::symbolic_link_exists;
using boost::filesystem::copy_directory;
using boost::filesystem::create_hard_link;
using boost::filesystem::last_write_time;
BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_END
#undef BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_BEGIN
#undef BOOST_STL11_FILESYSTEM_MAP_NAMESPACE_END
