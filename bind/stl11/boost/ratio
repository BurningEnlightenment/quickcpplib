/* This is an automatically generated bindings file. Don't modify it! */
#if !defined(BOOST_STL11_RATIO_MAP_NAMESPACE_BEGIN) || !defined(BOOST_STL11_RATIO_MAP_NAMESPACE_END)
#error You need to define BOOST_STL11_RATIO_MAP_NAMESPACE_BEGIN and BOOST_STL11_RATIO_MAP_NAMESPACE_END to use this header file
#endif
#include <boost/ratio.hpp>
BOOST_STL11_RATIO_MAP_NAMESPACE_BEGIN
extern const char *boost_local_bind_in;
#ifdef BOOST_STL11_RATIO_MAP_NO_KILO
#undef BOOST_STL11_RATIO_MAP_NO_KILO
#else
using boost::kilo;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_HECTO
#undef BOOST_STL11_RATIO_MAP_NO_HECTO
#else
using boost::hecto;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_CENTI
#undef BOOST_STL11_RATIO_MAP_NO_CENTI
#else
using boost::centi;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_EXA
#undef BOOST_STL11_RATIO_MAP_NO_EXA
#else
using boost::exa;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_MICRO
#undef BOOST_STL11_RATIO_MAP_NO_MICRO
#else
using boost::micro;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_MILLI
#undef BOOST_STL11_RATIO_MAP_NO_MILLI
#else
using boost::milli;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_NANO
#undef BOOST_STL11_RATIO_MAP_NO_NANO
#else
using boost::nano;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_DECI
#undef BOOST_STL11_RATIO_MAP_NO_DECI
#else
using boost::deci;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_PICO
#undef BOOST_STL11_RATIO_MAP_NO_PICO
#else
using boost::pico;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_FEMTO
#undef BOOST_STL11_RATIO_MAP_NO_FEMTO
#else
using boost::femto;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_PETA
#undef BOOST_STL11_RATIO_MAP_NO_PETA
#else
using boost::peta;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_ATTO
#undef BOOST_STL11_RATIO_MAP_NO_ATTO
#else
using boost::atto;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO_GREATER_EQUAL
#undef BOOST_STL11_RATIO_MAP_NO_RATIO_GREATER_EQUAL
#else
template<class R1, class R2> using ratio_greater_equal = boost::ratio_greater_equal<R1, R2>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_GIGA
#undef BOOST_STL11_RATIO_MAP_NO_GIGA
#else
using boost::giga;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO_GREATER
#undef BOOST_STL11_RATIO_MAP_NO_RATIO_GREATER
#else
template<class R1, class R2> using ratio_greater = boost::ratio_greater<R1, R2>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO_NOT_EQUAL
#undef BOOST_STL11_RATIO_MAP_NO_RATIO_NOT_EQUAL
#else
template<class R1, class R2> using ratio_not_equal = boost::ratio_not_equal<R1, R2>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_MEGA
#undef BOOST_STL11_RATIO_MAP_NO_MEGA
#else
using boost::mega;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO_LESS_EQUAL
#undef BOOST_STL11_RATIO_MAP_NO_RATIO_LESS_EQUAL
#else
template<class R1, class R2> using ratio_less_equal = boost::ratio_less_equal<R1, R2>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_TRUE_TYPE
#undef BOOST_STL11_RATIO_MAP_NO_TRUE_TYPE
#else
using boost::true_type;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_ENABLE_IF
#undef BOOST_STL11_RATIO_MAP_NO_ENABLE_IF
#else
template<class Cond, class T> using enable_if = boost::enable_if<Cond, T>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_FALSE_TYPE
#undef BOOST_STL11_RATIO_MAP_NO_FALSE_TYPE
#else
using boost::false_type;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO_LESS
#undef BOOST_STL11_RATIO_MAP_NO_RATIO_LESS
#else
template<class R1, class R2> using ratio_less = boost::ratio_less<R1, R2>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_DECA
#undef BOOST_STL11_RATIO_MAP_NO_DECA
#else
using boost::deca;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO
#undef BOOST_STL11_RATIO_MAP_NO_RATIO
#else
template<boost::intmax_t _0, boost::intmax_t _1> using ratio = boost::ratio<_0, _1>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_INTEGRAL_CONSTANT
#undef BOOST_STL11_RATIO_MAP_NO_INTEGRAL_CONSTANT
#else
template<class T, T _1> using integral_constant = boost::integral_constant<T, _1>;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_TERA
#undef BOOST_STL11_RATIO_MAP_NO_TERA
#else
using boost::tera;
#endif
#ifdef BOOST_STL11_RATIO_MAP_NO_RATIO_EQUAL
#undef BOOST_STL11_RATIO_MAP_NO_RATIO_EQUAL
#else
template<class R1, class R2> using ratio_equal = boost::ratio_equal<R1, R2>;
#endif
BOOST_STL11_RATIO_MAP_NAMESPACE_END
#undef BOOST_STL11_RATIO_MAP_NAMESPACE_BEGIN
#undef BOOST_STL11_RATIO_MAP_NAMESPACE_END
